-----------------------------------------------------------------------------------------------------
training
-----------
tables:
11041, 3806, 5562, 1377, 9150, 9359, 490, 8813, 11446, 5709, 3625, 10853, 9095, 2352, 10660, 6618, 6040, 2142, 1503, 364, 1546, 6855, 10690, 11667, 5532, 1991, 11216, 10296, 4063, 7446, 5949, 
4900, 9456, 359, 1532, 7528, 12019, 5987, 5538, 12142, 12413, 10909, 3487, 3526, 7912, 657, 11143, 5398, 12222, 9705, 9121, 3551, 10508, 8702, 5511, 4582, 5440, 60, 12751, 4087, 1805, 5944, 
1813, 8053, 8458, 4509, 6088, 9546, 5042, 10650, 39, 1559, 3432, 10784, 8334, 5382, 7755, 10157, 10931, 1083, 10059, 4694, 11215, 12362, 10782, 4893, 8177, 9465, 2950, 1864, 5517, 4953, 
7388, 2047, 932, 9911, 10678, 12004, 7556, 1228

articles:
19,25,164,166,215,309,449,715,1118,1233,1273,1283,1287,1291,1359,1362,1376,1410,1423,1446,1504,1985,2165,2207,2230,
2246,2269,2370,2478,2486,2656,2688,2737,2809,2811,2834,2864,3023,3030,3044,3085,3088,3094,3097,3105,3162,3275,3276,
3291,3308,3324,3561,3652,3950,3974,4011,4024,4113,4185,4246,4305,4375,4428,4539,4585,4713,4733,4744,4861,4908,4914,
4958,5055,5162,5267,5330,5383,5469,5558,5561,5569,5578,5636,5637,5666,5696,5704,5758,5807,5842,5842,5937,6034,6191,
6195,6286,6311,6382,6405,6540
--------------------------------------------------------------------------------------------------------------
development
----------------------------
tables:
311, 11953, 6188, 1571, 8303, 7357, 569, 3043, 10793, 4651, 11722, 10864, 12285, 10614, 5574, 2881, 1984, 8308, 11287, 6555, 3062, 6389, 3593, 3834, 11136, 1814, 5908, 10417, 6874, 7948, 6668, 
12008, 4475, 11076, 4284, 10890, 12428, 11985, 414, 6140, 8864, 10283, 9477, 11214, 10904, 4457, 12081, 11711, 987, 3042, 8331, 4609, 7814, 9859, 7062, 8509, 1210, 10229, 11042, 4160, 5449, 
4089, 9230, 9551, 8888, 6201, 10123, 3253, 12294, 2221, 5195, 975, 1889, 5789, 12235, 11767, 10835, 2478, 11440, 6363, 6550, 5819, 4525, 12497, 2795, 12200, 4714, 3386, 8931, 3655, 7751, 
7347, 10549, 9444, 12716, 10722, 11114, 7881, 9942

articles:
142,182,259,468,473,1109,1296,1363,1383,1408,1468,1535,1934,1964,2017,2017,2021,2073,2151,2260,2284,2385,2488,2514,2558,
2635,2641,2665,2701,2717,2745,2930,3051,3109,3204,3221,3258,3345,3369,3377,3450,3463,3527,3537,3588,3662,3750,3926,3932,
4110,4139,4169,4198,4363,4366,4375,4454,4605,4616,4633,4788,4905,4919,4959,5142,5183,5318,5357,5377,5430,5506,5531,5595,
5640,5657,5672,5684,5690,5758,5780,5795,5805,5842,5874,5936,6050,6056,6071,6152,6174,6192,6246,6305,6316,6343,6345,6411,
6436,6524
--------------------------------------------------------------------------------------------------
testing
-------------------------------------------------------------
tables
10578, 7650, 11926, 6541, 12773, 10951, 6402, 8137, 3198, 11206, 3023, 10664, 6388, 8047, 2190, 122, 2784, 4317, 1543, 12240, 3656, 8291, 3279, 8436, 2384, 8329, 8734, 9736, 12384, 11065, 
11390, 4436, 11361, 10262, 10391, 11559, 1212, 6257, 9133, 11769, 12780, 5920, 7165, 1687, 2330, 10575, 396, 10506, 7858, 5926, 12412, 7611, 9954, 11104, 3143, 9903, 2863, 9762, 1154, 8111, 
4867, 8736, 7933, 3359, 10713, 7904, 7489, 190, 5994, 11514, 3472, 3316, 5692, 12767, 5869, 6603, 4824, 9950, 321, 4040, 11866, 3299, 4352, 3068, 2281, 12635, 2822, 5732, 9310, 8729, 9846, 4142, 
3946, 3706, 10580, 7974, 4452, 8862, 993, 11607, 9311

articles
55,78,146,176,476,1040,1111,1286,1327,1458,1486,1498,1512,1931,1943,1958,2012,2023,2042,2057,2078,2083,2087,2102,2202,
2285,2313,2437,2471,2505,2576,2585,2626,2632,2782,2793,3158,3172,3244,3264,3267,3294,3405,3462,3467,3522,3557,3793,
3995,4049,4063,4163,4178,4192,4212,4242,4272,4281,4354,4374,4418,4550,4551,4553,4604,4738,4838,4838,5073,5091,5136,5160,
5186,5189,5368,5420,5468,5516,5517,5518,5562,5590,5715,5773,5791,5838,5903,5915,5959,5979,6001,6072,6117,6142,6318,6391,
6405,6496,6551,6554,6557








            resulta = queryclass.getCellsContainingInHeaderListOR(table.tableId, ["%o. of patient%","no. of patient%","No. patient%","no. patient%", "no patient%","No patient%","num patients", "Num patients","n%","%N%"])    
            armnamedupl = ''
            for res in resulta:
                if armnamedupl == res[10]+" "+res[9]:
                    continue
                if res[11]!=None and "haracteristic" not in res[11] and "total" not in res[11].lower() and "overall" not in res[11].lower():
                    continue
                if res[10]!=None and "o. of patient" not in res[10] and "no. of patient" not in res[10].lower() and "o. patient" not in res[10].lower() and "o patient" not in res[10].lower() and "um patient" not in res[10].lower() and "n " not in res[10].lower():
                    continue
                armname = table.tableCaption
                m2 = re.search('^(\d)+$',res[9])
                if(m2==None):
                    continue
                Num = m2.group(0)  
                if Num=='' or Num==str(0):
                    continue
                print Num 
                armnamedupl = res[10]+" "+res[9]
                armid = queryclass.SaveArm(armname, id,table.tableId) 
                queryclass.SaveAttribute(armid, "Number of Patients", Num)
                hasValueInHeader = True

